How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You could see the difference in the two sets of data, and with the difference highlighted we were able to find a misspelling. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Comparing changes to the code, might help you identify the areas that were changed for the worse. Also, finding blocks of code you deleted, but found to be useful. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A major pro, is not getting clutter with too many previous versions, but an obvious downside is there is a possibility that you forget to commit. 
 
Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	In Git, the files that are being created are typically more interdependent than files created in Google Docs.     

How can you use the commands git log and git diff to view the history of files?

    Git log allows us to view all of the commits and the comments associated with those commits, git diff allows us to compare two commits.

How might using version control make you more confident to make changes that
could break something?

    You can easily access previous versions and find where the mistake took place. 

Now that you have your workspace set up, what do you want to try using Git for?

    coding
